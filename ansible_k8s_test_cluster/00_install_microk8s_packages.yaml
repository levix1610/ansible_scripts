# This playbook is to install all the needed packages to build the microk8s cluster.
# Built to run after terraform provisions out the virtual resources.

---
- name: microk8s server setup
  hosts: all_nodes # Does all servers in the inventory list
  become: yes # do as sudo
  gather_facts: yes

  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  tasks:
    # task 1. remove any old stale fingerprints
    - name: Remove stale SSH host keys from known_hosts # Speed up the rebuild initial time
      ansible.builtin.known_hosts:
        host: "{{ inventory_hostname }}"
        state: absent
        # The key_file parameter may be necessary if you are not using the default ~/.ssh/known_hosts
        # key_file: "~/.ssh/known_hosts"
      delegate_to: localhost
      # run_once: true # Only needs to be done once per host being targeted
      become: no

    # task 2. update all packages on all servers
    - name: Ensure all packages are up to date # Make sure all packages are up to date
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian' # Will only run on ubuntu/debian builds

    # task 3. install microk8s
    - name: Install MicroK8s snap package # Installs microk8s on all nodes
      ansible.builtin.snap:
        name: microk8s
        state: present
        classic: yes

    # Install nfs-common packages on all servers.
    - name: Install nfs-common packages # Installs all nfs packages on all nodes
      ansible.builtin.apt:
        name: nfs-common
        state: present





